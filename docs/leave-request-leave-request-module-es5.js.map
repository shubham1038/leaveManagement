{"version":3,"sources":["webpack:///src/app/leave-request/leave-list/leave-list.component.ts","webpack:///src/app/leave-request/leave-list/leave-list.component.html","webpack:///src/app/leave-request/leave-new/leave-new.component.ts","webpack:///src/app/leave-request/leave-new/leave-new.component.html","webpack:///src/app/leave-request/leave-request-routing.module.ts","webpack:///src/app/leave-request/leave-request.module.ts"],"names":["LeaveListComponent","leaveRequestService","modalService","spinner","leaveList","desc","getLeaveRequest","sortKey","direction","sort","a","b","employee","show","getLeaveRequests","subscribe","resp","hide","reqId","console","log","cancelLeaveReq","redirectAfterSave","popMesg","confirmCallback","popTitle","confirmOK","selector","templateUrl","styleUrls","LeaveNewComponent","employeeService","leave","leaves","value","viewValue","addLeaves","data","leaveForm","submitted","getEmployees","JSON","stringify","modelRef","openSearchPopUp","obj","selectedEmployee","selectedItem","onSubmit","searchEmployee","routes","path","component","children","redirectTo","pathMatch","LeaveRequestRoutingModule","forChild","imports","exports","LeaveRequestModule","forRoot","declarations"],"mappings":"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","file":"leave-request-leave-request-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { LeaveRequestService } from 'src/app/core/service';\nimport { ModalService } from 'src/app/shared/service/modal-service';\n\n@Component({\n  selector: 'app-leave-list',\n  templateUrl: './leave-list.component.html',\n  styleUrls: ['./leave-list.component.css']\n})\nexport class LeaveListComponent implements OnInit {\n\n  public leaveList: any = [];\n  desc: boolean = false;\n  constructor(private leaveRequestService: LeaveRequestService,\n    private modalService: ModalService,\n    private spinner: NgxSpinnerService) { }\n\n  ngOnInit(): void {\n    this.getLeaveRequest();\n  }\n\n  sort(sortKey: string) {\n    this.desc = !this.desc;\n    let direction = this.desc ? 1 : -1;\n    if (sortKey === 'firstName') {\n      this.leaveList.sort(function (a, b) {\n        if (a.employee[sortKey] > b.employee[sortKey]) {\n          return 1 * direction;\n        } else if (a.employee[sortKey] < b.employee[sortKey]) {\n          return -1 * direction;\n        } else {\n          return 0;\n        }\n      })\n    } else {\n      this.leaveList.sort(function (a, b) {\n        if (a[sortKey] > b[sortKey]) {\n          return 1 * direction;\n        } else if (a[sortKey] < b[sortKey]) {\n          return -1 * direction;\n        } else {\n          return 0;\n        }\n      })\n    }\n  }\n\n  getLeaveRequest() {\n    this.spinner.show();\n    this.leaveRequestService.getLeaveRequests().subscribe(\n      resp => {\n        this.leaveList = resp;\n        this.spinner.hide();\n      }\n    )\n  }\n\n  cancelLeave(reqId: string) {\n    this.spinner.show();\n    console.log('Req ID -' + reqId)\n    this.leaveRequestService.cancelLeaveReq(reqId).subscribe(resp => {\n      this.getLeaveRequest();\n      this.redirectAfterSave(\"Leave Cancelled successfully\", () => { }, \"Success\");\n      this.spinner.hide();\n    })\n  }\n\n  redirectAfterSave(popMesg, confirmCallback, popTitle) {\n    this.modalService.confirmOK(popMesg, confirmCallback, popTitle);\n  }\n\n}\n","<div class=\"panel-body\">\n  <table class=\"table table-hover table-sm\" datatable>\n    <thead class=\"thead-light\">\n      <tr>\n        <th (click)=\"sort('reqId')\">Request Id <mat-icon>swap_vert</mat-icon>\n        </th>\n        <th (click)=\"sort('firstName')\">Employee Name <mat-icon>swap_vert</mat-icon>\n        </th>\n        <th (click)=\"sort('leaveType')\">Leave Type <mat-icon>swap_vert</mat-icon>\n        </th>\n        <th (click)=\"sort('startDate')\">From Date <mat-icon>swap_vert</mat-icon>\n        </th>\n        <th (click)=\"sort('endDate')\">To Date <mat-icon>swap_vert</mat-icon>\n        </th>\n        <th (click)=\"sort('reason')\">Reason <mat-icon>swap_vert</mat-icon>\n        </th>\n        <th>Action</th>\n\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let leave of leaveList\">\n        <td>{{leave.reqId}}</td>\n        <td>{{leave.employee.firstName}} {{leave.employee.lastName}}</td>\n        <td>{{leave.leaveType}}</td>\n        <td>{{leave.startDate | date:'short' }}</td>\n        <td>{{leave.endDate | date:'short'}}</td>\n        <td>{{leave.reason}}</td>\n        <td><button (click)=\"cancelLeave(leave.reqId)\" class='btn btn-primary'><i\n              class=\"fa fa-futboll-0\">Cancel</i></button>\n        </td>\n      </tr>\n    </tbody><br>\n  </table>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Leave } from 'src/app/core/model/leave';\nimport { EmployeeService, LeaveRequestService } from 'src/app/core/service';\nimport { ModalService } from 'src/app/shared/service/modal-service';\n\ninterface LeaveType {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-leave-new',\n  templateUrl: './leave-new.component.html',\n  styleUrls: ['./leave-new.component.css']\n})\nexport class LeaveNewComponent implements OnInit {\n\n  public leave = new Leave();\n  public modelRef: BsModalRef;\n  @ViewChild(\"leaveForm\") leaveForm;\n  constructor(private employeeService: EmployeeService,\n    private modalService: ModalService,\n    private leaveRequestService: LeaveRequestService,\n    private spinner: NgxSpinnerService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    this.spinner.show();\n    this.leaveRequestService.addLeaves(this.leave).subscribe(\n      data => {\n        if (data === true) {\n          this.leave = new Leave();\n          this.leaveForm.submitted = false;\n          this.redirectAfterSave(\"Leave added successfully\", () => { }, \"Success\");\n          this.spinner.hide();\n        } else {\n          this.redirectAfterSave(\"You already have active leave for applied period. Please re-visit your leave and apply new leave for diffrent period\", () => { }, \"Error\");\n          this.spinner.hide();\n        }\n\n      }\n    )\n  }\n\n  searchEmployee() {\n    this.spinner.show();\n    this.employeeService.getEmployees().subscribe(\n      resp => {\n        console.log(JSON.stringify(resp) + '----' + resp[0]['firstName'])\n        this.modelRef = this.modalService.openSearchPopUp(resp, 'Search', (obj) => { this.selectedEmployee(obj); }, \"Select\")\n        this.spinner.hide();\n      }\n    )\n  }\n  selectedEmployee(obj) {\n    console.log(obj)\n    this.modelRef.hide();\n    this.leave.employee = obj.selectedItem;\n  }\n  leaves: LeaveType[] = [\n    { value: 'Sick', viewValue: 'Sick' },\n    { value: 'Casual', viewValue: 'Casual' },\n    { value: 'Annual', viewValue: 'Annual' }\n  ];\n\n  redirectAfterSave(popMesg, confirmCallback, popTitle) {\n    this.modalService.confirmOK(popMesg, confirmCallback, popTitle);\n  }\n}\n","<div class=\"row\">\n    <form name=\"form\" novalidate (ngSubmit)=\"leaveForm.form.valid && onSubmit()\" #leaveForm=\"ngForm\"\n        class=\"mx-auto col-md-7 offset-md-2 form-box md-outline\">\n        <h4 class=\" mb-3 form-title\" style=\"font: revert; font-size: large; margin-top: 8px;\"> Leave Request </h4>\n        <div class=\"form-group row\" style=\"margin-bottom: 0px;\">\n            <label for=\"reason\" class=\"col-sm-3 col-form-label\">Leave Type &nbsp;<span\n                    class=\"text-danger\"></span></label>\n            <div class=\"col-sm-9\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Leave Type</mat-label>\n                    <mat-select [(ngModel)]=\"leave.leaveType\" name=\"leaveType\">\n                        <mat-option *ngFor=\"let leaveType of leaves\" [value]=\"leaveType.value\">\n                            {{leaveType.viewValue}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label class=\"col-form-label col-sm-3\" for=\"pwd\">Employee Name:</label>\n            <div class=\"col-sm-6\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Enter Employee\" name=\"selectedEmployee\"\n                    [(ngModel)]=\"leave \n                                 && leave.employee \n                                 && leave.employee.firstName\" #selectedEmployee=\"ngModel\"\n                    [ngClass]=\"{ 'is-invalid': leaveForm.submitted && selectedEmployee.invalid }\" [readonly]=\"true\"\n                    required>\n                <div *ngIf=\"leaveForm.submitted && selectedEmployee.invalid\" class=\"error\">\n                    <div *ngIf=\"selectedEmployee.errors.required\">Employee is required</div>\n                </div>\n\n            </div>\n            <div class=\"col-sm-2\" style=\"padding-left: 0;\">\n                <button type=\"button\" class=\"btn btn-info float-left\" (click)=\"searchEmployee()\">Search</button>\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <!-- <div class=\"row border\"> -->\n\n            <div class=\"checkbox col-sm-10 col-md-3\">\n                <label>Set Start and End Date</label>\n            </div>\n            <div class=\"col-xs-6 col-md-4\">\n                <input type=\"text\" [(ngModel)]=\"leave.startDate\" name=\"startDate\" placeholder=\"Start Date\"\n                    class=\"form-control\" bsDatepicker [bsConfig]=\"{dateInputFormat: 'YYYY-MM-DD'}\"\n                    onkeydown=\"return false\" autocomplete=\"off\" required>\n            </div>\n            <div class=\"col-xs-6 col-md-3\">\n                <input type=\"text\" [(ngModel)]=\"leave.endDate\" name=\"endDate\" placeholder=\"End Date\"\n                    class=\"form-control\" bsDatepicker [bsConfig]=\"{dateInputFormat: 'YYYY-MM-DD'}\"\n                    onkeydown=\"return false\" [minDate]=\"leave.startDate\" autocomplete=\"off\" required>\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label for=\"reason\" class=\"col-sm-3 col-form-label\">Reason&nbsp;<span class=\"text-danger\"></span></label>\n            <div class=\"col-sm-9\">\n                <input type=\"text\" name=\"reason\" [(ngModel)]=\"leave.reason\" class=\"form-control\" placeholder=\"Reason\" />\n            </div>\n        </div>\n\n        <button mat-raised-button color=\"primary\" class=\"mt-3\" type=\"submit\">Submit </button>\n    </form>\n\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LeaveListComponent } from './leave-list/leave-list.component';\nimport { LeaveNewComponent } from './leave-new/leave-new.component';\nimport { LeaveRequestComponent } from './leave-request.component';\n\n\nconst routes: Routes = [\n  {\n    path:'',\n    component: LeaveRequestComponent,\n    children:[\n        {\n            path:'',\n            redirectTo:'list',\n            pathMatch:'full'\n        },\n        {\n            path:'list',\n            component: LeaveListComponent\n        },\n        {\n            path:'new',\n            component: LeaveNewComponent\n        }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LeaveRequestRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LeaveRequestRoutingModule } from './leave-request-routing.module';\nimport { LeaveListComponent } from './leave-list/leave-list.component';\nimport { LeaveNewComponent } from './leave-new/leave-new.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../shared/material/material.module';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [LeaveListComponent, LeaveNewComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    LeaveRequestRoutingModule,\n    BsDatepickerModule.forRoot(),\n  ]\n})\nexport class LeaveRequestModule { }\n"]}